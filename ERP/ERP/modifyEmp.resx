<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroButton2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AUEECgdJP6KEAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQKSURBVHhe
        7Zu7axRRFMZXsfQBgiK62ZnZjUaIWCoqKFYWgqIiBOOfIBZio2KCgrYm1lpo4atRawn7yMMnGixMtLE0
        aCGixESXxO+Ys2T27tnMjLnHvUn2gx+EvefMOffbedyZnaQqKgXB9pLv3yn6/hj4BaYbwFjJ8/qLQXD2
        STa7hlvTV9HzTqD4pNFMY/G8L4UgOM4t6om+eRR0a/KzTBV8/zS3qiPe7aXirlAueN5+bte+UICOeamw
        M2AvGJ5OpZZzy3aFAlNmQUt8At10HMcBe2IHDscrOPa/G9uZwfN2c8t2JRazRxn0Jvn2YMIOTPa3sR2i
        m0PsSiikQQ+XiyXEDxr5xE0etiuhkAblvO9v5ZKRwuHwwNwGfcbDdmUW0gJn8vNcMlKL0gBwi0tGalEa
        kGQCTQOaBsQ3AJfYZbhsduIm6jYWTF2Jb6LMQlpoGYB1w0Uj9h2uOBt4OFpGshpaBtBdoxkL4psgJKuQ
        xADE95r54BoPV0mI+wsOh9GBlpaNHFZfUrIGSQzI53LbkPMzlD8+kMm083CVQjE1xDJBStQgiQEkNqGH
        qDd5UriGRKQJUpIGSQ2IK6mWyZwmSAkaNNIA5r1oghCoggMGELUmCEEqOGIAUW2CEKCCQwYQsyYIgyrE
        MaAYBHtxwhpGPD1JErdjkZHBXG69MwYMpdNrEffVzNPkb0/SgAZRBmD8gJSnzDdnDOjPZrcgTusJdT1e
        O3UOKHjeZcT+LxMm6JzjlAGkYja7GXd4R6XfDiSkWjGYKHnewZmCcoB14hqQVFKtCCbxzR/i9CVnQPXk
        SUKQCg4YUDt5khCoQoMNkCdPEoJVSGpAPpVaUcpk9hD0N39cI6mWQf3Jk4QEFZIYMNDWtgpXgpeh/Of5
        9vaVPFylUIzE3JMnCUkqJDEAk78g5J/j4SqZcSGiJ08SElVIZIDv3zPzcZN0l4erhLHws8MKs9f5KAnJ
        KiQxgGLj5mPssREbf/IkI1kNLQNKra3rsHc8RMwP8Dbx+0ThIppoGTBvmYW0aBrQNKBpQNMALhmppgFN
        A5a4AYgfMvOxrr/Bw3ZVU0iJuAb0+/5O3AzVvCqL1V4Xh9iVWUiRp9JDzQowqAOTvIrJiy9LY4m7i1u2
        K6mYg7zRfF1eKugSZewd+7hd+0KBcaOgS0yVguAUt6oj/jVWKt5oPuO+/hi3qSd6i1so3ijo33eK6OnM
        s9bW1dyirugBJPaCUaMR66gtZGyoL53ehCZfmE3bxGkDSPTSMXa9I2j2EZAeNM6X+1zKfdHxhwVJJ5qm
        B45WzIC513nzC0tkBi5FJzGJeZmBQ+Awb3Lh6p/NCIJXaiu5RimBGR/6gsDjtMWpihn8fP4jIENGsNtf
        ojEOc1Cp1B+RNB+5MipyugAAAABJRU5ErkJggg==
</value>
  </data>
</root>